{
  "address": "0x463Fe11B357f13b892e212f1AB9b57AbbD533988",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMRC",
          "name": "_mrc",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_erc20",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "adminErr",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "contributorAlreadyExistsErr",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "erc20TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "holderErr",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "noFundsWithdrawErr",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "projectInvalidParameterErr",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContributor",
          "type": "address"
        }
      ],
      "name": "newContributorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newProjectAddress",
          "type": "address"
        }
      ],
      "name": "newProjectCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_colateralCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reputationLevel",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxContributorsNumber",
          "type": "uint256"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAccountToContributorData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "reputationLevel",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reputationPoints",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "banned",
              "type": "bool"
            }
          ],
          "internalType": "struct Contributor",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getContributor",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "reputationLevel",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reputationPoints",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "banned",
              "type": "bool"
            }
          ],
          "internalType": "struct Contributor",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContributorsNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getERC20Interface",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMRCInterface",
      "outputs": [
        {
          "internalType": "contract IMRC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProjects",
      "outputs": [
        {
          "internalType": "contract Project[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProjectsNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRacksPMOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isContributorBanned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isWalletContributor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerContributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "reputationLevel",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reputationPoints",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "banned",
              "type": "bool"
            }
          ],
          "internalType": "struct Contributor",
          "name": "_newData",
          "type": "tuple"
        }
      ],
      "name": "setAccountToContributorData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_state",
          "type": "bool"
        }
      ],
      "name": "setContributorStateToBanList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20",
          "type": "address"
        }
      ],
      "name": "setERC20Address",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "withdrawAllFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbbfda9c57f60d19592327e69531a46f487bdabe2298ee2793c5b00f619f2074e",
  "receipt": {
    "to": null,
    "from": "0x626A29bCcd5a5e2D2736f8Ca717B094dEa159a2A",
    "contractAddress": "0x463Fe11B357f13b892e212f1AB9b57AbbD533988",
    "transactionIndex": 17,
    "gasUsed": "4069542",
    "logsBloom": "0x00000004000000000000000000000000400000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000008000000000100000000000000000000001200000000000000000000002000000000000020000000000000000000c00000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000100000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xdc67e549efb31cc866627a566d03aa14ff0348aead18a25d146732d3467bb8e4",
    "transactionHash": "0xbbfda9c57f60d19592327e69531a46f487bdabe2298ee2793c5b00f619f2074e",
    "logs": [
      {
        "transactionIndex": 17,
        "blockNumber": 11315060,
        "transactionHash": "0xbbfda9c57f60d19592327e69531a46f487bdabe2298ee2793c5b00f619f2074e",
        "address": "0x463Fe11B357f13b892e212f1AB9b57AbbD533988",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000626a29bccd5a5e2d2736f8ca717b094dea159a2a"
        ],
        "data": "0x",
        "logIndex": 34,
        "blockHash": "0xdc67e549efb31cc866627a566d03aa14ff0348aead18a25d146732d3467bb8e4"
      },
      {
        "transactionIndex": 17,
        "blockNumber": 11315060,
        "transactionHash": "0xbbfda9c57f60d19592327e69531a46f487bdabe2298ee2793c5b00f619f2074e",
        "address": "0x463Fe11B357f13b892e212f1AB9b57AbbD533988",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000626a29bccd5a5e2d2736f8ca717b094dea159a2a",
          "0x000000000000000000000000626a29bccd5a5e2d2736f8ca717b094dea159a2a"
        ],
        "data": "0x",
        "logIndex": 35,
        "blockHash": "0xdc67e549efb31cc866627a566d03aa14ff0348aead18a25d146732d3467bb8e4"
      }
    ],
    "blockNumber": 11315060,
    "cumulativeGasUsed": "7642742",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc0f6567a4a653d315d829f6d2b3535dce101cd72",
    "0x4e777b826fbD60453CE9701dE5328a45E3fF1d44"
  ],
  "numDeployments": 6,
  "solcInputHash": "0fea47491c3c271dabdd3870c5e4a52e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMRC\",\"name\":\"_mrc\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_erc20\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"adminErr\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"contributorAlreadyExistsErr\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"erc20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"holderErr\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"noFundsWithdrawErr\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"projectInvalidParameterErr\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContributor\",\"type\":\"address\"}],\"name\":\"newContributorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newProjectAddress\",\"type\":\"address\"}],\"name\":\"newProjectCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_colateralCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reputationLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxContributorsNumber\",\"type\":\"uint256\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountToContributorData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reputationLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationPoints\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"banned\",\"type\":\"bool\"}],\"internalType\":\"struct Contributor\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getContributor\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reputationLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationPoints\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"banned\",\"type\":\"bool\"}],\"internalType\":\"struct Contributor\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContributorsNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getERC20Interface\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMRCInterface\",\"outputs\":[{\"internalType\":\"contract IMRC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjects\",\"outputs\":[{\"internalType\":\"contract Project[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjectsNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRacksPMOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isContributorBanned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isWalletContributor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerContributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reputationLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationPoints\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"banned\",\"type\":\"bool\"}],\"internalType\":\"struct Contributor\",\"name\":\"_newData\",\"type\":\"tuple\"}],\"name\":\"setAccountToContributorData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setContributorStateToBanList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"}],\"name\":\"setERC20Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"withdrawAllFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"details\":\"Only callable by the Admin\"},\"createProject(string,uint256,uint256,uint256)\":{\"details\":\"Only callable by Admins\"},\"getContributorsNumber()\":{\"details\":\"Only callable by Holders\"},\"getProjects()\":{\"details\":\"Only callable by Holders\"},\"getProjectsNumber()\":{\"details\":\"Only callable by Holders\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isContributorBanned(address)\":{\"details\":\"Only callable by Admins.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerContributor()\":{\"details\":\"Only callable by Holders who are not already Contributors\"},\"removeAdmin(address)\":{\"details\":\"Only callable by the Admin\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setAccountToContributorData(address,(address,uint256,uint256,bool))\":{\"details\":\"Only callable by Admins.\"},\"setContributorStateToBanList(address,bool)\":{\"details\":\"Only callable by Admins.\"},\"setERC20Address(address)\":{\"details\":\"Only callable by the Admin\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawAllFunds(address)\":{\"details\":\"Only owner is able to call this function\"}},\"version\":1},\"userdoc\":{\"events\":{\"newContributorRegistered(address)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"addAdmin(address)\":{\"notice\":\"Set new Admin\"},\"createProject(string,uint256,uint256,uint256)\":{\"notice\":\"Create Project\"},\"getAccountToContributorData(address)\":{\"notice\":\"Get Contributor Data by address\"},\"getContributor(uint256)\":{\"notice\":\"Get Contributor by index\"},\"getContributorsNumber()\":{\"notice\":\"Get total number of contributors\"},\"getERC20Interface()\":{\"notice\":\"Returns ERC20 address\"},\"getMRCInterface()\":{\"notice\":\"Returns MRC address\"},\"getProjects()\":{\"notice\":\"Get projects depending on Level\"},\"getProjectsNumber()\":{\"notice\":\"Get total number of projects\"},\"getRacksPMOwner()\":{\"notice\":\"Returns Contract Owner\"},\"isAdmin(address)\":{\"notice\":\"Returns whether an address is admin or not\"},\"isContributorBanned(address)\":{\"notice\":\"Check whether an account is banned or not\"},\"isWalletContributor(address)\":{\"notice\":\"Check whether an address is Contributor or not\"},\"registerContributor()\":{\"notice\":\"Add Contributor\"},\"removeAdmin(address)\":{\"notice\":\"Remove an account from the user role\"},\"setAccountToContributorData(address,(address,uint256,uint256,bool))\":{\"notice\":\"Set Contributor Data by address\"},\"setContributorStateToBanList(address,bool)\":{\"notice\":\"Set a ban state for a Contributor\"},\"setERC20Address(address)\":{\"notice\":\"Set new ERC20 Token\"},\"withdrawAllFunds(address)\":{\"notice\":\"Used to withdraw All funds\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RacksProjectManager.sol\":\"RacksProjectManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Contributor.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\n/// @notice struct Contributor when a holder has been registered\\r\\nstruct Contributor {\\r\\n    address wallet;\\r\\n    uint256 reputationLevel;\\r\\n    uint256 reputationPoints;\\r\\n    bool banned;\\r\\n}\\r\\n\",\"keccak256\":\"0x26e6f6f25f43fe630974a00265f34cf0fdbd339eecc3b0f24d070928aab0b5ac\",\"license\":\"MIT\"},\"contracts/Err.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nerror adminErr();\\r\\nerror holderErr();\\r\\nerror contributorErr();\\r\\nerror contributorAlreadyExistsErr();\\r\\nerror projectContributorAlreadyExistsErr();\\r\\nerror maxContributorsNumberExceededErr();\\r\\nerror projectContributorIsBannedErr();\\r\\nerror erc20TransferFailed();\\r\\nerror transferGiveAwayFailed();\\r\\nerror projectNoEditableErr();\\r\\nerror projectInvalidParameterErr();\\r\\nerror projectFinishedErr();\\r\\nerror noFundsWithdrawErr();\\r\\nerror noFundsGiveAwayErr();\\r\\nerror notCompletedErr();\\r\\nerror projectContributorHasNoReputationEnoughErr();\\r\\n\",\"keccak256\":\"0xbd9a7e53a0e648e506766994d1eab50203ef2ff6501d5b74e95a1a35dc18d2a7\",\"license\":\"MIT\"},\"contracts/IMRC.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\\\";\\r\\n\\r\\ninterface IMRC is IERC721Enumerable {\\r\\n    function walletOfOwner(address account) external view returns (uint256[] memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x9efb503f20090bd39074320bc200a84102446cb843518ecb99748eef0640c0c8\",\"license\":\"MIT\"},\"contracts/IRacksProjectManager.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"./Project.sol\\\";\\r\\nimport \\\"./Contributor.sol\\\";\\r\\nimport \\\"./IMRC.sol\\\";\\r\\nimport \\\"./Err.sol\\\";\\r\\n\\r\\ninterface IRacksProjectManager {\\r\\n    /// @notice Events\\r\\n    event newContributorRegistered(address newContributor);\\r\\n    event newProjectCreated(string name, address newProjectAddress);\\r\\n\\r\\n    function isAdmin(address account) external view returns (bool);\\r\\n\\r\\n    function getERC20Interface() external view returns (IERC20);\\r\\n\\r\\n    function getRacksPMOwner() external view returns (address);\\r\\n\\r\\n    function isWalletContributor(address account) external view returns (bool);\\r\\n\\r\\n    function isContributorBanned(address account) external view returns (bool);\\r\\n\\r\\n    function getAccountToContributorData(address account)\\r\\n        external\\r\\n        view\\r\\n        returns (Contributor memory);\\r\\n\\r\\n    function setAccountToContributorData(address account, Contributor memory newData) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x954b052fc7c609b95f2098d95d3cce68d7fe9c1146ff8271f8e40ec0f07397c1\",\"license\":\"MIT\"},\"contracts/Project.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\nimport \\\"./IRacksProjectManager.sol\\\";\\r\\nimport \\\"./Contributor.sol\\\";\\r\\nimport \\\"./Err.sol\\\";\\r\\n\\r\\ncontract Project is Ownable, AccessControl {\\r\\n    /// @notice Interfaces\\r\\n    IRacksProjectManager private immutable racksPM;\\r\\n\\r\\n    /// @notice State variables\\r\\n    bytes32 private constant ADMIN_ROLE = 0x00;\\r\\n    string private name;\\r\\n    uint256 private colateralCost;\\r\\n    uint256 private reputationLevel;\\r\\n    uint256 private maxContributorsNumber;\\r\\n    bool private completed;\\r\\n    Contributor[] private projectContributors;\\r\\n    mapping(address => bool) private walletIsProjectContributor;\\r\\n    mapping(address => uint256) private contributorToParticipationWeight;\\r\\n    IERC20 private immutable racksPM_ERC20;\\r\\n\\r\\n    /// @notice Check that the project has no contributors, therefore is editable\\r\\n    modifier isEditable() {\\r\\n        if (projectContributors.length > 0) revert projectNoEditableErr();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @notice Check that the project is not finished\\r\\n    modifier isNotFinished() {\\r\\n        if (completed) revert projectFinishedErr();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @notice Check that user is Admin\\r\\n    modifier onlyAdmin() {\\r\\n        if (!hasRole(ADMIN_ROLE, msg.sender)) revert adminErr();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @notice Check that user is Contributor\\r\\n    modifier onlyContributor() {\\r\\n        if (!racksPM.isWalletContributor(msg.sender)) revert contributorErr();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @notice Events\\r\\n    event newProjectContributorsRegistered(address newProjectContributor);\\r\\n\\r\\n    constructor(\\r\\n        IRacksProjectManager _racksPM,\\r\\n        string memory _name,\\r\\n        uint256 _colateralCost,\\r\\n        uint256 _reputationLevel,\\r\\n        uint256 _maxContributorsNumber\\r\\n    ) {\\r\\n        if (\\r\\n            _colateralCost <= 0 ||\\r\\n            _reputationLevel <= 0 ||\\r\\n            _maxContributorsNumber <= 0 ||\\r\\n            bytes(_name).length <= 0\\r\\n        ) revert projectInvalidParameterErr();\\r\\n        racksPM = _racksPM;\\r\\n        name = _name;\\r\\n        colateralCost = _colateralCost;\\r\\n        reputationLevel = _reputationLevel;\\r\\n        maxContributorsNumber = _maxContributorsNumber;\\r\\n        _setupRole(ADMIN_ROLE, msg.sender);\\r\\n        _setupRole(ADMIN_ROLE, _racksPM.getRacksPMOwner());\\r\\n        racksPM_ERC20 = _racksPM.getERC20Interface();\\r\\n    }\\r\\n\\r\\n    ////////////////////////\\r\\n    //  Logic Functions  //\\r\\n    //////////////////////\\r\\n\\r\\n    /**\\r\\n     * @notice Add Project Contributor\\r\\n     * @dev Only callable by Holders who are already Contributors\\r\\n     */\\r\\n    function registerProjectContributor() external onlyContributor isNotFinished {\\r\\n        if (walletIsProjectContributor[msg.sender]) revert projectContributorAlreadyExistsErr();\\r\\n        if (projectContributors.length == maxContributorsNumber)\\r\\n            revert maxContributorsNumberExceededErr();\\r\\n\\r\\n        Contributor memory newProjectContributor = racksPM.getAccountToContributorData(msg.sender);\\r\\n\\r\\n        if (racksPM.isContributorBanned(newProjectContributor.wallet))\\r\\n            revert projectContributorIsBannedErr();\\r\\n        if (newProjectContributor.reputationLevel < reputationLevel)\\r\\n            revert projectContributorHasNoReputationEnoughErr();\\r\\n\\r\\n        projectContributors.push(newProjectContributor);\\r\\n        walletIsProjectContributor[msg.sender] = true;\\r\\n        emit newProjectContributorsRegistered(msg.sender);\\r\\n\\r\\n        bool success = racksPM_ERC20.transferFrom(msg.sender, address(this), colateralCost);\\r\\n        if (!success) revert erc20TransferFailed();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Finish Project\\r\\n     * @dev Only callable by Admins when the project isn't completed\\r\\n     * - The contributors and participationWeights array must have the same size of the project contributors list.\\r\\n     * - If there is a banned Contributor in the project, you have to pass his address and participation (should be 0) anyways.\\r\\n     * - The sum of @param _participationWeights can not be more than 100\\r\\n     */\\r\\n    function finishProject(\\r\\n        uint256 _totalReputationPointsReward,\\r\\n        address[] memory _contributors,\\r\\n        uint256[] memory _participationWeights\\r\\n    ) external onlyAdmin isNotFinished {\\r\\n        if (\\r\\n            _totalReputationPointsReward <= 0 ||\\r\\n            _contributors.length != projectContributors.length ||\\r\\n            _participationWeights.length != projectContributors.length\\r\\n        ) revert projectInvalidParameterErr();\\r\\n\\r\\n        completed = true;\\r\\n        uint256 totalParticipationWeight = 0;\\r\\n        unchecked {\\r\\n            for (uint256 i = 0; i < _contributors.length; i++) {\\r\\n                if (!walletIsProjectContributor[_contributors[i]]) revert contributorErr();\\r\\n\\r\\n                uint256 participationWeight = _participationWeights[i];\\r\\n\\r\\n                contributorToParticipationWeight[_contributors[i]] = participationWeight;\\r\\n                totalParticipationWeight += participationWeight;\\r\\n            }\\r\\n            if (totalParticipationWeight > 100) revert projectInvalidParameterErr();\\r\\n        }\\r\\n        unchecked {\\r\\n            for (uint256 i = 0; i < projectContributors.length; i++) {\\r\\n                if (!racksPM.isContributorBanned(projectContributors[i].wallet)) {\\r\\n                    increaseContributorReputation(\\r\\n                        (_totalReputationPointsReward *\\r\\n                            contributorToParticipationWeight[projectContributors[i].wallet]) / 100,\\r\\n                        projectContributors[i]\\r\\n                    );\\r\\n                    racksPM.setAccountToContributorData(\\r\\n                        projectContributors[i].wallet,\\r\\n                        projectContributors[i]\\r\\n                    );\\r\\n\\r\\n                    bool success = racksPM_ERC20.transfer(\\r\\n                        projectContributors[i].wallet,\\r\\n                        colateralCost\\r\\n                    );\\r\\n                    if (!success) revert erc20TransferFailed();\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        if (racksPM_ERC20.balanceOf(address(this)) > 0) withdrawFunds();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Give Away extra rewards\\r\\n     * @dev Only callable by Admins when the project is completed\\r\\n     */\\r\\n    function giveAway() external onlyAdmin {\\r\\n        if (!completed) revert notCompletedErr();\\r\\n\\r\\n        if (address(this).balance <= 0) revert noFundsGiveAwayErr();\\r\\n        unchecked {\\r\\n            uint256 projectBalance = address(this).balance;\\r\\n            for (uint256 i = 0; i < projectContributors.length; i++) {\\r\\n                address contrAddress = projectContributors[i].wallet;\\r\\n                if (!racksPM.isContributorBanned(contrAddress)) {\\r\\n                    (bool success, ) = contrAddress.call{\\r\\n                        value: (projectBalance * contributorToParticipationWeight[contrAddress]) /\\r\\n                            100\\r\\n                    }(\\\"\\\");\\r\\n                    if (!success) revert transferGiveAwayFailed();\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    ////////////////////////\\r\\n    //  Helper Functions //\\r\\n    //////////////////////\\r\\n\\r\\n    /**\\r\\n     * @notice Used to withdraw All funds\\r\\n     * @dev Only callable by Admins when completing the project\\r\\n     */\\r\\n    function withdrawFunds() private onlyAdmin {\\r\\n        if (racksPM_ERC20.balanceOf(address(this)) <= 0) revert noFundsWithdrawErr();\\r\\n\\r\\n        bool success = racksPM_ERC20.transfer(owner(), racksPM_ERC20.balanceOf(address(this)));\\r\\n        if (!success) revert erc20TransferFailed();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Set new Admin\\r\\n     * @dev Only callable by the Admin\\r\\n     */\\r\\n    function addAdmin(address _newAdmin) external onlyOwner {\\r\\n        grantRole(ADMIN_ROLE, _newAdmin);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Remove an account from the user role\\r\\n     * @dev Only callable by the Admin\\r\\n     */\\r\\n    function removeAdmin(address _account) external virtual onlyOwner {\\r\\n        revokeRole(ADMIN_ROLE, _account);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Increase Contributor's reputation\\r\\n     * @dev Only callable by Admins internally\\r\\n     */\\r\\n    function increaseContributorReputation(\\r\\n        uint256 _reputationPointsReward,\\r\\n        Contributor storage _contributor\\r\\n    ) private onlyAdmin {\\r\\n        unchecked {\\r\\n            uint256 grossReputationPoints = _contributor.reputationPoints + _reputationPointsReward;\\r\\n\\r\\n            while (grossReputationPoints >= (_contributor.reputationLevel * 100)) {\\r\\n                grossReputationPoints -= (_contributor.reputationLevel * 100);\\r\\n                _contributor.reputationLevel++;\\r\\n            }\\r\\n            _contributor.reputationPoints = grossReputationPoints;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Provides information about supported interfaces (required by AccessControl)\\r\\n     */\\r\\n    function supportsInterface(bytes4 _interfaceId) public view virtual override returns (bool) {\\r\\n        return super.supportsInterface(_interfaceId);\\r\\n    }\\r\\n\\r\\n    ////////////////////////\\r\\n    //  Setter Functions //\\r\\n    //////////////////////\\r\\n\\r\\n    /**\\r\\n     * @notice Edit the Project Name\\r\\n     * @dev Only callable by Admins when the project has no Contributor yet.\\r\\n     */\\r\\n    function setName(string memory _name) external onlyAdmin isEditable {\\r\\n        if (bytes(_name).length <= 0) revert projectInvalidParameterErr();\\r\\n        name = _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Edit the Colateral Cost\\r\\n     * @dev Only callable by Admins when the project has no Contributor yet.\\r\\n     */\\r\\n    function setColateralCost(uint256 _colateralCost) external onlyAdmin isEditable {\\r\\n        if (_colateralCost <= 0) revert projectInvalidParameterErr();\\r\\n        colateralCost = _colateralCost;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Edit the Reputation Level\\r\\n     * @dev Only callable by Admins when the project has no Contributor yet.\\r\\n     */\\r\\n    function setReputationLevel(uint256 _reputationLevel) external onlyAdmin isEditable {\\r\\n        if (_reputationLevel <= 0) revert projectInvalidParameterErr();\\r\\n        reputationLevel = _reputationLevel;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Edit the Reputation Level\\r\\n     * @dev Only callable by Admins when the project has no Contributor yet.\\r\\n     */\\r\\n    function setMaxContributorsNumber(uint256 _maxContributorsNumber)\\r\\n        external\\r\\n        onlyAdmin\\r\\n        isEditable\\r\\n    {\\r\\n        if (_maxContributorsNumber <= 0) revert projectInvalidParameterErr();\\r\\n        maxContributorsNumber = _maxContributorsNumber;\\r\\n    }\\r\\n\\r\\n    ////////////////////////\\r\\n    //  Getter Functions //\\r\\n    //////////////////////\\r\\n\\r\\n    /// @notice Get the project name\\r\\n    function getName() external view returns (string memory) {\\r\\n        return name;\\r\\n    }\\r\\n\\r\\n    /// @notice Get the colateral cost to enter as contributor\\r\\n    function getColateralCost() external view returns (uint256) {\\r\\n        return colateralCost;\\r\\n    }\\r\\n\\r\\n    /// @notice Get the reputation level of the project\\r\\n    function getReputationLevel() external view returns (uint256) {\\r\\n        return reputationLevel;\\r\\n    }\\r\\n\\r\\n    /// @notice Get the maximum contributor that can be in the project\\r\\n    function getMaxContributors() external view returns (uint256) {\\r\\n        return maxContributorsNumber;\\r\\n    }\\r\\n\\r\\n    /// @notice Get total number of contributors\\r\\n    function getContributorsNumber() external view returns (uint256) {\\r\\n        return projectContributors.length;\\r\\n    }\\r\\n\\r\\n    /// @notice Return true is the project is completed, otherwise return false\\r\\n    function isCompleted() external view returns (bool) {\\r\\n        return completed;\\r\\n    }\\r\\n\\r\\n    /// @notice Return the contributor in the corresponding index\\r\\n    function getProjectContributor(uint256 _index) external view returns (Contributor memory) {\\r\\n        if (_index >= projectContributors.length || _index < 0) revert projectInvalidParameterErr();\\r\\n        return projectContributors[_index];\\r\\n    }\\r\\n\\r\\n    /// @notice Return true if the address is a contributor in the project\\r\\n    function isInProjectContributor(address _contributor) external view returns (bool) {\\r\\n        return walletIsProjectContributor[_contributor];\\r\\n    }\\r\\n\\r\\n    /// @notice Get the participation weight in percent\\r\\n    function getContributorParticipationWeight(address _contributor)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return contributorToParticipationWeight[_contributor];\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x78b8c8b32d282c626a6b2174c250c42d1eb5802eb1e2f33c6382616ec9449754\",\"license\":\"MIT\"},\"contracts/RacksProjectManager.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"./IRacksProjectManager.sol\\\";\\r\\nimport \\\"./Project.sol\\\";\\r\\nimport \\\"./Contributor.sol\\\";\\r\\nimport \\\"./IMRC.sol\\\";\\r\\nimport \\\"./Err.sol\\\";\\r\\n\\r\\n//              \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588    \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\r\\n//            \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588  \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b\\r\\n//           \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b  \\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b\\r\\n//            \\u259c\\u2588\\u2588\\u259b    \\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b    \\u2588\\u2588\\u2588\\u2588\\u2588       \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b    \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b\\r\\n//              \\u2580     \\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b      \\u2588\\u2588\\u2588\\u2588\\u2588     \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b\\r\\n//                    \\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b      \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b   \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b\\r\\n//   \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b   \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b   \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2599\\r\\n//  \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588   \\u259c\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2599          \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b   \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b   \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2599\\r\\n// \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u259c\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2599      \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b   \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b   \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2599\\r\\n//                        \\u259c\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2599            \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b          \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\r\\n//                          \\u259c\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2599        \\u259f\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u259b            \\u2502  LABS  \\u2502\\r\\n//                                                              \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\r\\n\\r\\ncontract RacksProjectManager is IRacksProjectManager, Ownable, AccessControl {\\r\\n    /// @notice tokens\\r\\n    IMRC private immutable mrc;\\r\\n    IERC20 private erc20;\\r\\n\\r\\n    /// @notice State variables\\r\\n    bytes32 private constant ADMIN_ROLE = 0x00;\\r\\n    Project[] private projects;\\r\\n    address[] private contributors;\\r\\n    mapping(address => bool) private walletIsContributor;\\r\\n    mapping(address => bool) private accountIsBanned;\\r\\n    mapping(address => Contributor) private accountToContributorData;\\r\\n\\r\\n    /// @notice Check that user is Admin\\r\\n    modifier onlyAdmin() {\\r\\n        if (!hasRole(ADMIN_ROLE, msg.sender)) revert adminErr();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @notice Check that user is Holder or Admin\\r\\n    modifier onlyHolder() {\\r\\n        if (mrc.balanceOf(msg.sender) < 1 && !hasRole(ADMIN_ROLE, msg.sender)) revert holderErr();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @notice Check that user is Contributor\\r\\n    modifier onlyContributor() {\\r\\n        if (!walletIsContributor[msg.sender]) revert contributorErr();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(IMRC _mrc, IERC20 _erc20) {\\r\\n        erc20 = _erc20;\\r\\n        mrc = _mrc;\\r\\n        _setupRole(ADMIN_ROLE, msg.sender);\\r\\n    }\\r\\n\\r\\n    ////////////////////////\\r\\n    //  Logic Functions  //\\r\\n    //////////////////////\\r\\n\\r\\n    /**\\r\\n     * @notice Create Project\\r\\n     * @dev Only callable by Admins\\r\\n     */\\r\\n    function createProject(\\r\\n        string memory _name,\\r\\n        uint256 _colateralCost,\\r\\n        uint256 _reputationLevel,\\r\\n        uint256 _maxContributorsNumber\\r\\n    ) external onlyAdmin {\\r\\n        if (\\r\\n            _colateralCost <= 0 ||\\r\\n            _reputationLevel <= 0 ||\\r\\n            _maxContributorsNumber <= 0 ||\\r\\n            bytes(_name).length <= 0\\r\\n        ) revert projectInvalidParameterErr();\\r\\n\\r\\n        Project newProject = new Project(\\r\\n            this,\\r\\n            _name,\\r\\n            _colateralCost,\\r\\n            _reputationLevel,\\r\\n            _maxContributorsNumber\\r\\n        );\\r\\n\\r\\n        projects.push(newProject);\\r\\n        _setupRole(ADMIN_ROLE, address(newProject));\\r\\n        emit newProjectCreated(_name, address(newProject));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Add Contributor\\r\\n     * @dev Only callable by Holders who are not already Contributors\\r\\n     */\\r\\n    function registerContributor() external onlyHolder {\\r\\n        if (walletIsContributor[msg.sender]) revert contributorAlreadyExistsErr();\\r\\n\\r\\n        contributors.push(msg.sender);\\r\\n        walletIsContributor[msg.sender] = true;\\r\\n        accountToContributorData[msg.sender] = Contributor(msg.sender, 1, 0, false);\\r\\n        emit newContributorRegistered(msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Used to withdraw All funds\\r\\n     * @dev Only owner is able to call this function\\r\\n     */\\r\\n    function withdrawAllFunds(address _wallet) external onlyOwner {\\r\\n        if (erc20.balanceOf(address(this)) <= 0) revert noFundsWithdrawErr();\\r\\n        if (!erc20.transfer(_wallet, erc20.balanceOf(address(this)))) revert erc20TransferFailed();\\r\\n    }\\r\\n\\r\\n    ////////////////////////\\r\\n    //  Helper Functions  //\\r\\n    //////////////////////\\r\\n\\r\\n    /**\\r\\n     * @notice Set new Admin\\r\\n     * @dev Only callable by the Admin\\r\\n     */\\r\\n    function addAdmin(address _newAdmin) external onlyOwner {\\r\\n        grantRole(ADMIN_ROLE, _newAdmin);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Remove an account from the user role\\r\\n     * @dev Only callable by the Admin\\r\\n     */\\r\\n    function removeAdmin(address _account) external virtual onlyOwner {\\r\\n        revokeRole(ADMIN_ROLE, _account);\\r\\n    }\\r\\n\\r\\n    ////////////////////////\\r\\n    //  Setter Functions //\\r\\n    //////////////////////\\r\\n\\r\\n    /**\\r\\n     * @notice Set new ERC20 Token\\r\\n     * @dev Only callable by the Admin\\r\\n     */\\r\\n    function setERC20Address(address _erc20) external onlyAdmin {\\r\\n        erc20 = IERC20(_erc20);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Set a ban state for a Contributor\\r\\n     * @dev Only callable by Admins.\\r\\n     */\\r\\n    function setContributorStateToBanList(address _account, bool _state) external onlyAdmin {\\r\\n        accountIsBanned[_account] = _state;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Set Contributor Data by address\\r\\n     * @dev Only callable by Admins.\\r\\n     */\\r\\n    function setAccountToContributorData(address _account, Contributor memory _newData)\\r\\n        public\\r\\n        override\\r\\n        onlyAdmin\\r\\n    {\\r\\n        accountToContributorData[_account] = _newData;\\r\\n    }\\r\\n\\r\\n    ////////////////////////\\r\\n    //  Getter Functions //\\r\\n    //////////////////////\\r\\n\\r\\n    /// @notice Returns whether an address is admin or not\\r\\n    function isAdmin(address _account) public view override returns (bool) {\\r\\n        return hasRole(ADMIN_ROLE, _account);\\r\\n    }\\r\\n\\r\\n    /// @notice Returns MRC address\\r\\n    function getMRCInterface() external view returns (IMRC) {\\r\\n        return mrc;\\r\\n    }\\r\\n\\r\\n    /// @notice Returns ERC20 address\\r\\n    function getERC20Interface() public view override returns (IERC20) {\\r\\n        return erc20;\\r\\n    }\\r\\n\\r\\n    /// @notice Returns Contract Owner\\r\\n    function getRacksPMOwner() public view override returns (address) {\\r\\n        return owner();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Check whether an account is banned or not\\r\\n     * @dev Only callable by Admins.\\r\\n     */\\r\\n    function isContributorBanned(address _account) external view override returns (bool) {\\r\\n        return accountIsBanned[_account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get projects depending on Level\\r\\n     * @dev Only callable by Holders\\r\\n     */\\r\\n    function getProjects() public view onlyHolder returns (Project[] memory) {\\r\\n        // return projects;\\r\\n        Project[] memory filteredProjects = new Project[](projects.length);\\r\\n        if (hasRole(ADMIN_ROLE, msg.sender)) return projects;\\r\\n\\r\\n        if (walletIsContributor[msg.sender]) {\\r\\n            unchecked {\\r\\n                uint256 callerReputationLv = accountToContributorData[msg.sender].reputationLevel;\\r\\n                uint256 j = 0;\\r\\n                for (uint256 i = 0; i < projects.length; i++) {\\r\\n                    if (projects[i].getReputationLevel() <= callerReputationLv) {\\r\\n                        filteredProjects[j] = projects[i];\\r\\n                        j++;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        } else if (mrc.balanceOf(msg.sender) >= 1) {\\r\\n            unchecked {\\r\\n                uint256 j = 0;\\r\\n                for (uint256 i = 0; i < projects.length; i++) {\\r\\n                    if (projects[i].getReputationLevel() == 1) {\\r\\n                        filteredProjects[j] = projects[i];\\r\\n                        j++;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return filteredProjects;\\r\\n    }\\r\\n\\r\\n    /// @notice Get Contributor by index\\r\\n    function getContributor(uint256 _index) public view returns (Contributor memory) {\\r\\n        return accountToContributorData[contributors[_index]];\\r\\n    }\\r\\n\\r\\n    /// @notice Check whether an address is Contributor or not\\r\\n    function isWalletContributor(address _account) public view override returns (bool) {\\r\\n        return walletIsContributor[_account];\\r\\n    }\\r\\n\\r\\n    /// @notice Get Contributor Data by address\\r\\n    function getAccountToContributorData(address _account)\\r\\n        public\\r\\n        view\\r\\n        override\\r\\n        returns (Contributor memory)\\r\\n    {\\r\\n        return accountToContributorData[_account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get total number of projects\\r\\n     * @dev Only callable by Holders\\r\\n     */\\r\\n    function getProjectsNumber() external view onlyHolder returns (uint256) {\\r\\n        return projects.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get total number of contributors\\r\\n     * @dev Only callable by Holders\\r\\n     */\\r\\n    function getContributorsNumber() external view onlyHolder returns (uint256) {\\r\\n        return contributors.length;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9dc2e0ec56a5c6e28a1a18fbd22556d9b3c4ca1fe47f3fd57913daf9ff892dd5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAdmin(address)": {
        "details": "Only callable by the Admin"
      },
      "createProject(string,uint256,uint256,uint256)": {
        "details": "Only callable by Admins"
      },
      "getContributorsNumber()": {
        "details": "Only callable by Holders"
      },
      "getProjects()": {
        "details": "Only callable by Holders"
      },
      "getProjectsNumber()": {
        "details": "Only callable by Holders"
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isContributorBanned(address)": {
        "details": "Only callable by Admins."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerContributor()": {
        "details": "Only callable by Holders who are not already Contributors"
      },
      "removeAdmin(address)": {
        "details": "Only callable by the Admin"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setAccountToContributorData(address,(address,uint256,uint256,bool))": {
        "details": "Only callable by Admins."
      },
      "setContributorStateToBanList(address,bool)": {
        "details": "Only callable by Admins."
      },
      "setERC20Address(address)": {
        "details": "Only callable by the Admin"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawAllFunds(address)": {
        "details": "Only owner is able to call this function"
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "newContributorRegistered(address)": {
        "notice": "Events"
      }
    },
    "kind": "user",
    "methods": {
      "addAdmin(address)": {
        "notice": "Set new Admin"
      },
      "createProject(string,uint256,uint256,uint256)": {
        "notice": "Create Project"
      },
      "getAccountToContributorData(address)": {
        "notice": "Get Contributor Data by address"
      },
      "getContributor(uint256)": {
        "notice": "Get Contributor by index"
      },
      "getContributorsNumber()": {
        "notice": "Get total number of contributors"
      },
      "getERC20Interface()": {
        "notice": "Returns ERC20 address"
      },
      "getMRCInterface()": {
        "notice": "Returns MRC address"
      },
      "getProjects()": {
        "notice": "Get projects depending on Level"
      },
      "getProjectsNumber()": {
        "notice": "Get total number of projects"
      },
      "getRacksPMOwner()": {
        "notice": "Returns Contract Owner"
      },
      "isAdmin(address)": {
        "notice": "Returns whether an address is admin or not"
      },
      "isContributorBanned(address)": {
        "notice": "Check whether an account is banned or not"
      },
      "isWalletContributor(address)": {
        "notice": "Check whether an address is Contributor or not"
      },
      "registerContributor()": {
        "notice": "Add Contributor"
      },
      "removeAdmin(address)": {
        "notice": "Remove an account from the user role"
      },
      "setAccountToContributorData(address,(address,uint256,uint256,bool))": {
        "notice": "Set Contributor Data by address"
      },
      "setContributorStateToBanList(address,bool)": {
        "notice": "Set a ban state for a Contributor"
      },
      "setERC20Address(address)": {
        "notice": "Set new ERC20 Token"
      },
      "withdrawAllFunds(address)": {
        "notice": "Used to withdraw All funds"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 400,
        "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 24,
        "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
      },
      {
        "astId": 4151,
        "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
        "label": "erc20",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)1161"
      },
      {
        "astId": 4159,
        "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
        "label": "projects",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_contract(Project)4128)dyn_storage"
      },
      {
        "astId": 4162,
        "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
        "label": "contributors",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 4166,
        "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
        "label": "walletIsContributor",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4170,
        "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
        "label": "accountIsBanned",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4175,
        "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
        "label": "accountToContributorData",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_struct(Contributor)3149_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(Project)4128)dyn_storage": {
        "base": "t_contract(Project)4128",
        "encoding": "dynamic_array",
        "label": "contract Project[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)1161": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(Project)4128": {
        "encoding": "inplace",
        "label": "contract Project",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(Contributor)3149_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Contributor)",
        "numberOfBytes": "32",
        "value": "t_struct(Contributor)3149_storage"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)19_storage"
      },
      "t_struct(Contributor)3149_storage": {
        "encoding": "inplace",
        "label": "struct Contributor",
        "members": [
          {
            "astId": 3142,
            "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
            "label": "wallet",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3144,
            "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
            "label": "reputationLevel",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3146,
            "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
            "label": "reputationPoints",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3148,
            "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
            "label": "banned",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(RoleData)19_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 16,
            "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 18,
            "contract": "contracts/RacksProjectManager.sol:RacksProjectManager",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}